#!/usr/bin/env python3

import json
import requests
from requests.compat import urljoin
from config import *
from wp_version_scanner import *

def wp_version_exploit_finder(wp_version_vulns):
    wp_version_vuln_dict = wp_version_vulns
    vulnerabilities = wp_version_vuln_dict[wp_scanner_version]["vulnerabilities"]
    counter = 0

    for vuln in vulnerabilities:
        vuln_title = wp_version_vuln_dict[wp_scanner_version]["vulnerabilities"][counter]["title"]
        print("Vulnerability:\n" + vuln_title)

        vuln_type = wp_version_vuln_dict[wp_scanner_version]["vulnerabilities"][counter]["vuln_type"]
        print("\nVulnerability type:\n" + vuln_type)

        references = wp_version_vuln_dict[wp_scanner_version]["vulnerabilities"][counter]["references"]

        for exp_type in references:
            counter2 = 0
            if exp_type == "url":
                print("\nReferences:")
                refs = wp_version_vuln_dict[wp_scanner_version]["vulnerabilities"][counter]["references"]["url"]
                for exps in range(len(refs)):
                    print(refs[counter2])
                    counter2 += 1
            if exp_type == "metasploit":
                print("\nMetasploit:")
                exploits = wp_version_vuln_dict[wp_scanner_version]["vulnerabilities"][counter]["references"]["metasploit"]
                for exps in range(len(exploits)):
                    print(exploits[counter2])
                    counter2 += 1
            if exp_type == "cve":
                print("\nCVE:")
                exploits = wp_version_vuln_dict[wp_scanner_version]["vulnerabilities"][counter]["references"]["cve"]
                for exps in range(len(exploits)):
                    print(exploits[counter2])
                    counter2 += 1
            if exp_type == "exploitdb":
                print("\nExploitDB:")
                exploits = wp_version_vuln_dict[wp_scanner_version]["vulnerabilities"][counter]["references"]["exploitdb"]
                for exps in range(len(exploits)):
                    print(exploits[counter2])
                    counter2 += 1
        counter += 1
        print("\n###########################################################\n")


def wp_plugin_exploit_finder(plugin_vulns):
    plugin_vuln_dict = plugin_vulns
    vulnerabilities = plugin_vuln_dict[plugin_name]["vulnerabilities"]
    counter = 0

    for vuln in vulnerabilities:
        vuln_title = plugin_vuln_dict[plugin_name]["vulnerabilities"][counter]["title"]
        print("Vulnerability:\n" + vuln_title)

        vuln_type = plugin_vuln_dict[plugin_name]["vulnerabilities"][counter]["vuln_type"]
        print("\nVulnerability type:\n" + vuln_type)

        references = plugin_vuln_dict[plugin_name]["vulnerabilities"][counter]["references"]

        for exp_type in references:
            counter2 = 0
            if exp_type == "url":
                print("\nReferences:")
                refs = plugin_vuln_dict[plugin_name]["vulnerabilities"][counter]["references"]["url"]
                for exps in range(len(refs)):
                    print(refs[counter2])
                    counter2 += 1
            if exp_type == "metasploit":
                print("\nMetasploit:")
                exploits = plugin_vuln_dict[plugin_name]["vulnerabilities"][counter]["references"]["metasploit"]
                for exps in range(len(exploits)):
                    print(exploits[counter2])
                    counter2 += 1
            if exp_type == "cve":
                print("\nCVE:")
                exploits = plugin_vuln_dict[plugin_name]["vulnerabilities"][counter]["references"]["cve"]
                for exps in range(len(exploits)):
                    print(exploits[counter2])
                    counter2 += 1
            if exp_type == "exploitdb":
                print("\nExploitDB:")
                exploits = plugin_vuln_dict[plugin_name]["vulnerabilities"][counter]["references"]["exploitdb"]
                for exps in range(len(exploits)):
                    print(exploits[counter2])
                    counter2 += 1
        counter += 1
        print("\n###########################################################\n")


def wp_theme_exploit_finder(theme_vulns):
    theme_vuln_dict = theme_vulns
    vulnerabilities = theme_vuln_dict[theme_name]["vulnerabilities"]
    counter = 0

    for vuln in vulnerabilities:
        vuln_title = theme_vuln_dict[theme_name]["vulnerabilities"][counter]["title"]
        print("Vulnerability:\n" + vuln_title)

        vuln_type = theme_vuln_dict[theme_name]["vulnerabilities"][counter]["vuln_type"]
        print("\nVulnerability type:\n" + vuln_type)

        references = theme_vuln_dict[theme_name]["vulnerabilities"][counter]["references"]

        for exp_type in references:
            counter2 = 0
            if exp_type == "url":
                print("\nReferences:")
                refs = theme_vuln_dict[theme_name]["vulnerabilities"][counter]["references"]["url"]
                for exps in range(len(refs)):
                    print(refs[counter2])
                    counter2 += 1
            if exp_type == "metasploit":
                print("\nMetasploit:")
                exploits = theme_vuln_dict[theme_name]["vulnerabilities"][counter]["references"]["metasploit"]
                for exps in range(len(exploits)):
                    print(exploits[counter2])
                    counter2 += 1
            if exp_type == "cve":
                print("\nCVE:")
                exploits = theme_vuln_dict[theme_name]["vulnerabilities"][counter]["references"]["cve"]
                for exps in range(len(exploits)):
                    print(exploits[counter2])
                    counter2 += 1
            if exp_type == "exploitdb":
                print("\nExploitDB:")
                exploits = theme_vuln_dict[theme_name]["vulnerabilities"][counter]["references"]["exploitdb"]
                for exps in range(len(exploits)):
                    print(exploits[counter2])
                    counter2 += 1
        counter += 1
        print("\n###########################################################\n")

def main():
    global wp_scanner_version
    global theme_name
    global plugin_name
    wp_scanner_version = wp_version_finder(soup) # function in wp_version_scanner.py
    wordpress_version = wp_scanner_version.replace(".", "")
    theme_name = "echelon"
    plugin_name = "wp-symposium"

    # WPVULNDB sample api request
        # https://wpvulndb.com/api/v3/wordpresses/494 ~~~> wordpress version must not include periods
        # https://wpvulndb.com/api/v3/themes/pagelines
        # https://wpvulndb.com/api/v3/plugins/eshop

    base_url = "https://wpvulndb.com/api/v3/"
    api_token = {'Authorization': 'Token ' + wpvulndb_api_key}

    # WPVULNDB type of api call
    wordpress_path = "wordpresses/" + wordpress_version
    theme_path = "themes/" + theme_name
    plugin_path = "plugins/" + plugin_name

    # WPVULNDB API call
    # wordpress_url = requests.get(urljoin(base_url, wordpress_path), headers = api_token)
    # theme_url = requests.get(urljoin(base_url, theme_path), headers = api_token)
    # plugin_url = requests.get(urljoin(base_url, plugin_path), headers = api_token)

    # # output dictionary/object
    # wordpress_path_json_object = json.loads(wordpress_url.text)
    # theme_version_json_object = json.loads(theme_url.text)
    # plugin_version_json_object = json.loads(plugin_url.text)

    # output prettified
    # wordpress_path_json_str = json.dumps(wordpress_path_json_object, indent=2)
    # theme_version_json_str = json.dumps(theme_version_json_object, indent=2)
    # plugin_version_json_str = json.dumps(plugin_version_json_object, indent=2)

    # print(wordpress_path_json_str)
    # print(wordpress_path_json_object)
    # print(theme_version_json_str)
    # print(plugin_version_json_str)

    # WP Version Function Data
    # with open('sample_output_obj.json', 'w') as outfile:
    #     json.dump(wordpress_path_json_object, outfile)
    with open('sample_output_obj.json') as json_file:
        wp_version_data = json.load(json_file)
    wp_version_exploit_finder(wp_version_data)
    # wp_version_exploit_finder(wordpress_path_json_object)

    # WP Theme Function Data
    # with open('sample_output_theme_obj.json', 'w') as outfile:
    #     json.dump(theme_version_json_object, outfile)
    with open('sample_output_theme_obj.json') as json_file:
        theme_data = json.load(json_file)
    wp_theme_exploit_finder(theme_data)
    # wp_theme_exploit_finder(theme_version_json_object)

    # WP Plugin Function Data
    # with open('sample_output_plugin_obj.json', 'w') as outfile:
        # json.dump(plugin_version_json_object, outfile)
    with open('sample_output_plugin_obj.json') as json_file:
        plugin_data = json.load(json_file)
    wp_plugin_exploit_finder(plugin_data)
    # wp_plugin_exploit_finder(plugin_version_json_object)

if __name__ == '__main__':
    main()